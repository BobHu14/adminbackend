server:
  port: 8080

spring:
    datasource:
      name: test
        #数据库配置略
      url: jdbc:mysql://139.199.82.83:3306/demo?characterEncoding=utf-8&allowMultiQueries=true
      username: root
      password: alex
        # 使用druid数据源
      driver-class-name: com.mysql.cj.jdbc.Driver
      type: com.alibaba.druid.pool.DruidDataSource
      #初始化大小，最小，最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize : 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat, wall, logback
      connectionProperties : druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#    redis:
#      host: 139.199.82.83
#      port: 6379
#      password : alex
#      timeout: 0
#      jedis:
#        pool:
#          max-active: 8
#          max-idle: 8
#          min-idle: 0
#          max-wait: -1ms


### 该配置节点为独立的节点，有很多同学容易将这个配置放在spring的节点下，导致配置无法被识别
#mybatis:
#  mapper-locations: classpath:mapping/*.xml  #注意：一定要对应mapper映射xml文件的所在路径
#  type-aliases-package: com.alex.springboot.model  # 注意：对应实体类的路径

mybatis-plus:
  configuration:
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  # 此处有坑 单模块加载也需要配置*(classpath 紧挨着的星) 解决自定义SQL无法执行
  mapper-locations: classpath*:mapper/*/*Mapper.xml
  global-config:
    refresh: true
    #主键类型 AUTO(0, "数据库ID自增"),
      #INPUT(1, "用户输入ID"),
      #ID_WORKER(2, "全局唯一ID"),
      #UUID(3, "全局唯一ID"),
    #NONE(4, "该类型为未设置主键类型"),
    #ID_WORKER_STR(5, "字符串全局唯一ID");
    db-config:
      id-type: auto
#
##pagehelper分页插件
#pagehelper:
#    helperDialect: mysql
#    reasonable: true
#    supportMethodsArguments: true
#    params: count=countSql


